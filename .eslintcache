[{"D:\\it-kamasutra\\Training\\todolist-training\\src\\app\\AppWithRedux.tsx":"1","D:\\it-kamasutra\\Training\\todolist-training\\src\\app\\app-reducer.ts":"2","D:\\it-kamasutra\\Training\\todolist-training\\src\\features\\TodolistsList\\Todolist\\todolists-reducer.ts":"3","D:\\it-kamasutra\\Training\\todolist-training\\src\\features\\TodolistsList\\Todolist\\tasks-reducer.ts":"4","D:\\it-incubator\\todolist-training\\src\\index.tsx":"5","D:\\it-incubator\\todolist-training\\src\\app\\AppWithRedux.tsx":"6","D:\\it-incubator\\todolist-training\\src\\app\\app-reducer.ts":"7","D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\tasks-reducer.ts":"8","D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\todolists-reducer.ts":"9","D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","D:\\it-incubator\\todolist-training\\src\\components\\EditableSpan\\EditableSpan.tsx":"11","D:\\it-incubator\\todolist-training\\src\\reportWebVitals.ts":"12","D:\\it-incubator\\todolist-training\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"13","D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\TodolistsList.tsx":"14","D:\\it-incubator\\todolist-training\\src\\components\\AddItemForm\\AddItemForm.tsx":"15","D:\\it-incubator\\todolist-training\\src\\api\\todolist-api.ts":"16","D:\\it-incubator\\todolist-training\\src\\app\\store.ts":"17","D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"18","D:\\it-incubator\\todolist-training\\src\\features\\Login\\Login.tsx":"19","D:\\it-incubator\\todolist-training\\src\\features\\Login\\auth-reducer.ts":"20","D:\\it-incubator\\todolist-training\\src\\utils\\error-utils.ts":"21"},{"size":1312,"mtime":1613645858654,"results":"22","hashOfConfig":"23"},{"size":731,"mtime":1613646100122,"results":"24","hashOfConfig":"23"},{"size":3361,"mtime":1613646720172,"results":"25","hashOfConfig":"23"},{"size":4938,"mtime":1613646746345,"results":"26","hashOfConfig":"23"},{"size":744,"mtime":1615374993426,"results":"27","hashOfConfig":"28"},{"size":2991,"mtime":1615374958897,"results":"29","hashOfConfig":"28"},{"size":2445,"mtime":1614780726914,"results":"30","hashOfConfig":"28"},{"size":5807,"mtime":1614025495857,"results":"31","hashOfConfig":"28"},{"size":4667,"mtime":1614025495765,"results":"32","hashOfConfig":"28"},{"size":4445,"mtime":1614780726055,"results":"33","hashOfConfig":"28"},{"size":1123,"mtime":1614022811625,"results":"34","hashOfConfig":"28"},{"size":440,"mtime":1613936091327,"results":"35","hashOfConfig":"28"},{"size":1039,"mtime":1614014106469,"results":"36","hashOfConfig":"28"},{"size":4278,"mtime":1614780726181,"results":"37","hashOfConfig":"28"},{"size":1711,"mtime":1614015247701,"results":"38","hashOfConfig":"28"},{"size":3047,"mtime":1614780727083,"results":"39","hashOfConfig":"28"},{"size":1277,"mtime":1614766660626,"results":"40","hashOfConfig":"28"},{"size":1942,"mtime":1613936091321,"results":"41","hashOfConfig":"28"},{"size":3597,"mtime":1614780725740,"results":"42","hashOfConfig":"28"},{"size":2199,"mtime":1614780726839,"results":"43","hashOfConfig":"28"},{"size":813,"mtime":1614780726654,"results":"44","hashOfConfig":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11l1zqb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11b2kip",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"D:\\it-kamasutra\\Training\\todolist-training\\src\\app\\AppWithRedux.tsx",[],"D:\\it-kamasutra\\Training\\todolist-training\\src\\app\\app-reducer.ts",[],"D:\\it-kamasutra\\Training\\todolist-training\\src\\features\\TodolistsList\\Todolist\\todolists-reducer.ts",[],"D:\\it-kamasutra\\Training\\todolist-training\\src\\features\\TodolistsList\\Todolist\\tasks-reducer.ts",[],"D:\\it-incubator\\todolist-training\\src\\index.tsx",["94"],"D:\\it-incubator\\todolist-training\\src\\app\\AppWithRedux.tsx",["95"],"D:\\it-incubator\\todolist-training\\src\\app\\app-reducer.ts",[],"D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\tasks-reducer.ts",[],["96","97"],"D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\todolists-reducer.ts",[],"D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["98"],"D:\\it-incubator\\todolist-training\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\it-incubator\\todolist-training\\src\\reportWebVitals.ts",[],["99","100"],"D:\\it-incubator\\todolist-training\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],["101","102"],"D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\TodolistsList.tsx",["103","104","105","106","107","108","109","110"],"import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {\r\n    changeTodolistFilterAC,\r\n    createTodolistTC, FilterValuesType,\r\n    getTodolistTC,\r\n    removeTodolistTC,\r\n    TodolistDomainType,\r\n    updateTodolistTitleTC\r\n} from \"./todolists-reducer\";\r\nimport {TaskStatuses} from \"../../../api/todolist-api\";\r\nimport {AddTaskTC, RemoveTaskTC, UpdateTaskTC} from \"./tasks-reducer\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {AddItemForm} from \"../../../components/AddItemForm/AddItemForm\";\r\nimport {Todolist} from \"./Todolist\";\r\nimport {TaskStateType} from \"../../../app/AppWithRedux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype TodolistsListPropsType = {\r\n    demo?: boolean\r\n}\r\nexport const TodolistsList: React.FC<TodolistsListPropsType> = ({demo = false}) => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TaskStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        dispatch(getTodolistTC())\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        dispatch(createTodolistTC(title))\r\n    }, [dispatch]);\r\n\r\n    const removeTodolist = useCallback((todolistId: string) => {\r\n        dispatch(removeTodolistTC(todolistId))\r\n    }, []);\r\n\r\n    const onChangeTodolistTitle = useCallback((newTitle: string, todolistId: string) => {\r\n        dispatch(updateTodolistTitleTC(todolistId, newTitle))\r\n    }, []);\r\n\r\n    const changeFilterForTask = useCallback((filter: FilterValuesType, todolistId: string) => {\r\n        dispatch(changeTodolistFilterAC(todolistId, filter))\r\n    }, []);\r\n\r\n    const changeTaskStatus = useCallback((id: string, newStatus: TaskStatuses, todolistId: string) => {\r\n        dispatch(UpdateTaskTC(todolistId, id, {status: newStatus}))\r\n    }, []);\r\n\r\n    const onChangeTaskTitle = useCallback((id: string, newTitle: string, todolistId: string) => {\r\n        dispatch(UpdateTaskTC(todolistId, id, {title: newTitle}))\r\n    }, []);\r\n\r\n    const removeTask = useCallback((id: string, todolistId: string) => {\r\n        dispatch(RemoveTaskTC(todolistId, id))\r\n    }, []);\r\n\r\n    const addTask = useCallback((title: string, todolistId: string) => {\r\n        dispatch(AddTaskTC(todolistId, title))\r\n    }, []);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container style={{padding: '20px'}}>\r\n                <AddItemForm addItem={addTodolist}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    todolists.map(tl => {\r\n\r\n                        let tasksForTodolist = tasks[tl.id]\r\n\r\n                        return <Grid item>\r\n                            <Paper style={{padding: '10px'}}>\r\n                                <Todolist title={tl.title}\r\n                                          id={tl.id}\r\n                                          key={tl.id}\r\n                                          entityStatus={tl.entityStatus}\r\n                                          changeTaskStatus={changeTaskStatus}\r\n                                          removeTask={removeTask}\r\n                                          tasks={tasksForTodolist}\r\n                                          changeFilterForTask={changeFilterForTask}\r\n                                          _addNewTask={addTask}\r\n                                          filter={tl.filter}\r\n                                          _removeTodolist={removeTodolist}\r\n                                          onChangeTaskTitle={onChangeTaskTitle}\r\n                                          _onChangeTodolistTitle={onChangeTodolistTitle}\r\n                                          demo={demo}\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    })\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}",["111","112"],"D:\\it-incubator\\todolist-training\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"D:\\it-incubator\\todolist-training\\src\\api\\todolist-api.ts",[],"D:\\it-incubator\\todolist-training\\src\\app\\store.ts",[],"D:\\it-incubator\\todolist-training\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["113"],"import React, {ChangeEvent, useCallback} from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {EditableSpan} from \"../../../../components/EditableSpan/EditableSpan\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {TaskStatuses, TaskType} from \"../../../../api/todolist-api\";\r\n\r\nexport type TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    removeTask: (id: string, todolistId: string) => void\r\n    onChangeTaskTitle: (id: string, newTitle: string, todolistId: string) => void\r\n}\r\nexport const Task: React.FC<TaskPropsType> = React.memo(({task, todolistId, changeTaskStatus, onChangeTaskTitle, removeTask}) => {\r\n    console.log('Task is called')\r\n\r\n    const changeTaskStatusHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        changeTaskStatus(task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, todolistId)\r\n    }, [task.id, todolistId]);\r\n\r\n\r\n    const removeTaskHandler = () => {\r\n        removeTask(task.id, todolistId)\r\n    }\r\n\r\n    const onChangeTitle = useCallback((newTitle: string) => {\r\n        onChangeTaskTitle(task.id, newTitle, todolistId)\r\n    }, [onChangeTaskTitle, task.id, todolistId])\r\n\r\n    return (\r\n        <div className='tasks'>\r\n            <div key={task.id} className={task.status ? 'is-done' : ''}>\r\n                <Checkbox checked={task.status === TaskStatuses.Completed}\r\n                          onChange={changeTaskStatusHandler}\r\n                          color='primary'\r\n                />\r\n                <EditableSpan value={task.title} onChangeTitle={onChangeTitle}/>\r\n                <IconButton onClick={removeTaskHandler}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n})","D:\\it-incubator\\todolist-training\\src\\features\\Login\\Login.tsx",["114"],"import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from './auth-reducer';\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Password must be 3 or more characters'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n            formik.resetForm()\r\n        },\r\n    });\r\n    if (isLoggedIn) {\r\n\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            type=\"email\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email && formik.touched.email ?\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password && formik.touched.password ?\r\n                            <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}/>}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n","D:\\it-incubator\\todolist-training\\src\\features\\Login\\auth-reducer.ts",[],"D:\\it-incubator\\todolist-training\\src\\utils\\error-utils.ts",[],{"ruleId":"115","severity":1,"message":"116","line":8,"column":9,"nodeType":"117","messageId":"118","endLine":8,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":39,"column":8,"nodeType":"121","endLine":39,"endColumn":10,"suggestions":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"127","line":41,"column":8,"nodeType":"121","endLine":41,"endColumn":10,"suggestions":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"123","replacedBy":"131"},{"ruleId":"125","replacedBy":"132"},{"ruleId":"119","severity":1,"message":"133","line":34,"column":8,"nodeType":"121","endLine":34,"endColumn":10,"suggestions":"134"},{"ruleId":"119","severity":1,"message":"135","line":42,"column":8,"nodeType":"121","endLine":42,"endColumn":10,"suggestions":"136"},{"ruleId":"119","severity":1,"message":"135","line":46,"column":8,"nodeType":"121","endLine":46,"endColumn":10,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"135","line":50,"column":8,"nodeType":"121","endLine":50,"endColumn":10,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"135","line":54,"column":8,"nodeType":"121","endLine":54,"endColumn":10,"suggestions":"139"},{"ruleId":"119","severity":1,"message":"135","line":58,"column":8,"nodeType":"121","endLine":58,"endColumn":10,"suggestions":"140"},{"ruleId":"119","severity":1,"message":"135","line":62,"column":8,"nodeType":"121","endLine":62,"endColumn":10,"suggestions":"141"},{"ruleId":"119","severity":1,"message":"135","line":66,"column":8,"nodeType":"121","endLine":66,"endColumn":10,"suggestions":"142"},{"ruleId":"123","replacedBy":"143"},{"ruleId":"125","replacedBy":"144"},{"ruleId":"119","severity":1,"message":"145","line":21,"column":8,"nodeType":"121","endLine":21,"endColumn":29,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":56,"column":32,"nodeType":"149","endLine":56,"endColumn":49},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'id'. Either include them or remove the dependency array.",["153"],["151"],["152"],["151"],["152"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["154"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["155"],["156"],["157"],["158"],["159"],["160"],["161"],["151"],["152"],"React Hook useCallback has a missing dependency: 'changeTaskStatus'. Either include it or remove the dependency array. If 'changeTaskStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"163","fix":"169"},{"desc":"163","fix":"170"},{"desc":"163","fix":"171"},{"desc":"163","fix":"172"},{"desc":"163","fix":"173"},{"desc":"163","fix":"174"},{"desc":"163","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},"Update the dependencies array to be: [demo, dispatch, id]",{"range":"180","text":"181"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"182","text":"183"},{"range":"184","text":"179"},{"range":"185","text":"179"},{"range":"186","text":"179"},{"range":"187","text":"179"},{"range":"188","text":"179"},{"range":"189","text":"179"},{"range":"190","text":"179"},"Update the dependencies array to be: [changeTaskStatus, task.id, todolistId]",{"range":"191","text":"192"},[1069,1071],"[dispatch]",[1718,1720],"[demo, dispatch, id]",[1362,1364],"[demo, dispatch, isLoggedIn]",[1614,1616],[1783,1785],[1957,1959],[2146,2148],[2327,2329],[2464,2466],[2601,2603],[1082,1103],"[changeTaskStatus, task.id, todolistId]"]